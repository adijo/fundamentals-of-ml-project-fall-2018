ConvNet(
  (layer1): Sequential(
    (0): Conv2d(3, 96, kernel_size=(3, 3), stride=(1, 1))
    (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (layer2): Sequential(
    (0): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1))
    (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (layer3): Sequential(
    (0): Conv2d(96, 192, kernel_size=(3, 3), stride=(2, 2))
    (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (layer4): Sequential(
    (0): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1))
    (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (layer5): Sequential(
    (0): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1))
    (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (layer6): Sequential(
    (0): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2))
    (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (fc): Linear(in_features=3072, out_features=10, bias=True)
)
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)
Learning rate: 0.001
Epoch [1/1], Step [50/450], Loss: 1.3475, Accuracy:0.35
Epoch [1/1], Step [100/450], Loss: 1.4938, Accuracy:0.40
Epoch [1/1], Step [150/450], Loss: 1.4307, Accuracy:0.44
Epoch [1/1], Step [200/450], Loss: 1.1640, Accuracy:0.46
Epoch [1/1], Step [250/450], Loss: 1.1076, Accuracy:0.48
Epoch [1/1], Step [300/450], Loss: 1.0900, Accuracy:0.50
Epoch [1/1], Step [350/450], Loss: 1.0242, Accuracy:0.52
Epoch [1/1], Step [400/450], Loss: 1.0420, Accuracy:0.53
Epoch [1/1], Step [450/450], Loss: 0.9101, Accuracy:0.54
Epoch 1 validation accuracy= 0.6354
Test Accuracy of the model on the 10000 test images: 62.65 %
Predicted (row) labels vs targets (column)
655 	34 	68 	22 	27 	6 	7 	10 	81 	17 	
31 	753 	6 	6 	8 	3 	3 	6 	33 	86 	
81 	10 	569 	143 	252 	96 	67 	53 	23 	12 	
26 	9 	80 	450 	87 	211 	61 	64 	18 	15 	
3 	4 	19 	18 	243 	11 	12 	23 	2 	2 	
14 	6 	79 	183 	73 	562 	37 	96 	11 	6 	
14 	14 	101 	127 	180 	55 	800 	28 	15 	24 	
24 	19 	49 	30 	114 	48 	10 	698 	8 	25 	
112 	31 	15 	14 	8 	4 	3 	2 	765 	43 	
40 	120 	14 	7 	8 	4 	0 	20 	44 	770 	
